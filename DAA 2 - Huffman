class Node:
    def __init__(self,char,freq):
        self.char = char
        self.freq = freq
        self.left = None
        self.right = None
        self.huff = ''

def print_nodes(node, val=''):
    newVal = val + str(node.huff)
    if node.left:
        print_nodes(node.left, newVal)
    if node.right:
        print_nodes(node.right, newVal)
    if not node.left and not node.right:
        print(f'{node.char} -> {newVal}')

def main():
    string = input("Enter a string : ").replace(" ", "").lower()

    frequency = {}
    for char in string:
        if char in frequency:
            frequency[char] += 1
        else:
            frequency[char] = 1
    print(frequency)

    nodes = []
    for char,freq in frequency.items():
        nodes.append(Node(char,freq))

    while(len(nodes) > 1):
        nodes = sorted(nodes, key=lambda x : x.freq)
        left = nodes[0]
        right = nodes[1]
        left.huff = 0
        right.huff = 1

        newNode = Node(left.char + right.char, left.freq + right.freq)
        newNode.left = left
        newNode.right = right
        nodes.remove(left)
        nodes.remove(right)
        nodes.append(newNode)

    print_nodes(nodes[0])

main()
